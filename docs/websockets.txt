#this documents is for websockets use
web sockets are defned as a two-way communication between the servers and the clients, which m both the parties, communicate and exchange data at the same time This protocol defines a ful duplex communication from the ground up. Web socketstake a step forward in bringing desktop rich functionalities to the web browsers. I t represents an evolution, which was awaited for a long time in client/server web technology.

#before learning websockets, let me learn some of the js first


//getting started
You open up a WebSocket connection simply by calling the WebSocket constructor:

var connection = new WebSocket('ws://html5rocks.websocket.org/echo',['soap','xmpp']);

Notice the we: This is the new URL schema for WebSocket connections. There is also wss: for secure WebSocket connection the same way https: is used for secure HTTP connections.

attaching some event handdlers immediately to the connection allows you to know when the connection is opened, received incoming messages, or there is an error.

The second argument accepts optional subprotocols. It can be a string or an array of strings. Each string should represent a subprotocal name and server accepts only one of passed subprotocols in the array. Accepted subprotocol can be determined by accessing protocol property of WebSocket object.

The subprotocol names must be one of registerd subprotocol names in IANA registry. There is currently only one subprotocal name(soap) registered as of February 2012

//When the connection is open, send some data to the server
connection.onopen=fucntion(){
	connection.send('Ping');//send the message 'Ping' to the server
};

//Log errors
connection.onerror=function (error){
	console.log('WebSocket Error' +error);
};

//Log messages from the server
connection.onmessage=function(e)

HTTP has its own set of schemas such as http and https. Web socket protocol alsohas similar schema defined in its URL pattern.

The following image shows the Web Socket URL in tokens.
we://example.com:8000/chat.php
schema host port server

Before diving to the need of Web sockets, it is necessary to have alook at the existing techniques, which are used for duplex communication between the server and the client. The are as follows-
polling
long polling
streaming
postback and ajax
html5

Polling
polling can be defined as a method, which performs periodic requests regardless of the data that exists in the transimission. The periodic requests are sent in a synchronous way. The client makes a periodic request in a specified time interval to the Server. The response of the server includes available data or some warming message in it.

Long Polling
Long polling, as the name suggests, includes similar technique like polling.
The client and the server keep the connection active until some data is fetched or timeout occurs. If the connection is lost due to tsome reasons, the client scan start over and perform sequential request.

Long polling is nothing but performance improvement over polling process, but constant requests may slow down the process.

Streaming

It is considered as the best option for real-time data transmission. The server keeps the connection open and active with the client until unless the required data is being fetched. In this case, the connection is said to be open indefinitely. Streaming includes HTTP HEADERS WHICH INCREASES THE FILE SIZE, INCREASING DELAY. This can be considered as a major drawback

AJAX
AJAX is based on Javascript's XmlHttpRequest Object. It is an abbreviated form of Asynchronous Javascript and XML. XmlHttpRequest Object allows execution of the Javascript without reloading the complete web page.

The code snippet of AJAX call with XmlHttpRequest Object is as follows

var xhttp;

if (window.XMLHttpRequest){
	xhttp=new XMLHttpRequest();
}
else{
//code for IE6, IE5
xhttp=new ActiveXObject('Microsoft.XMLHTTP');
}


Why Do We Need Web Sockets?
Internet was conceived to be a collection of Hypertext Mark-up Language(HTML) pages linking one another to form a conceptual web of information. During the course of time

var socket= new WebSocket('ws://echo.websocket.org')
The URL mentioned above is a public address that can be used for testing and experiments. The websocket.org server is always up and when it receives the mssage and sends it back to the client.

This is the most important step to ensure that application works correctly.



Open
Once the connection has been established between the client and the server, the open event is fired from Web Socket instance. It is called as the initial handshake between client and server. The event, which is raised once the connectiono is established, is called onopen.

Message
Message event happens usually when the server sends some data.
Messages sent by the server to the client can include plain text messges. binary data or images. whenever the data is sent, the onmessage function is fired.

close event marks the end of the communication between server and the client. Closing the connection is possible with the help of onclose event.
After marking the end of communication with the help of onclose envent.
no messages can be further transferred betweeen the server and the client.
Closing the event can happen due to poor connectivity as well.


<!--example-->
//get text view and button for submitting the message
var textsend=document.getElementById('text-view');
var submitMsg=document.getElementById('tsend-button');

//Handling the click even
submitMsg.onclick=function(){
//Send the data
socket.send(textsend.value)
}


GET ws://websocket.example.com/HTTP/1.1
Origin:http://example.com
Connection: Upgrade
Host:websocket.example.com
Upgrade:websocket

